root@superesa-System-Product-Name:/opt/lampp/htdocs/nodejs# npm init --yes
root@superesa-System-Product-Name:/opt/lampp/htdocs/nodejs# code .
create index.js
// pour afficher les donnes de index.js 
root@superesa-System-Product-Name:/opt/lampp/htdocs/nodejs# node index
salam mes amies

console.log('before');
setTimeout(() => {
  console.log('get user from database.....');
}, 2000);
console.log('after');


//le Node js et un mode asynchrone 

//*************
console.log('before');
const user = getUsers(2);
console.log(user);
console.log('after');

function getUsers(id){

    setTimeout(() => {
        console.log('get user from database.....');
        return {
            id: id,
            gitHubusername: "rochdi Abdelatif"
        }
    }, 2000);
}
//Output
root@superesa-System-Product-Name:/opt/lampp/htdocs/nodejs# node index
before
undefined
after
get user from database.....

//**************
on dois mtn resoudre ce problem
il y a 3 solution:
1- avec callback

create callback.js

console.log('before');
getUsers(2, (user) => {
    console.log(user);
});

console.log('after');

function getUsers(id, callback){

    setTimeout(() => {
        console.log('get user from database.....');
        callback({
            id: id,
            gitHubusername: "rochdi Abdelatif"
        })
    }, 2000);
}
//Output
root@superesa-System-Product-Name:/opt/lampp/htdocs/nodejs# node callback
before
after
get user from database.....
{ id: 2, gitHubusername: 'rochdi Abdelatif' }
//*************
// Expl Avance

console.log('before');
getUsers(2, (user) => {
    console.log(user);
    getRepos(user.id, (rep) => {
        console.log(rep);
    });
});

console.log('after');

function getUsers(id, callback){

    setTimeout(() => {
        console.log('get user from database.....');
        callback({
            id: id,
            gitHubusername: "rochdi Abdelatif"
        })
    }, 2000);
}


function getRepos(idUser, callback){

    setTimeout(() => {
        console.log('get a repos.....');
        callback(['repo1', 'repo2', 'repo3'])
    }, 2000);
}
//Output
root@superesa-System-Product-Name:/opt/lampp/htdocs/nodejs# node callback
before
after
get user from database.....
{ id: 2, gitHubusername: 'rochdi Abdelatif' }
get a repos.....
[ 'repo1', 'repo2', 'repo3' ]
//*********************************
2-solution avec promise
create promise.js

explication de promise Classe comment il fonction
const p = new Promise((resolve, reject) => {
   const status = false;
  
   if(status) {
    // le cas favorable
    resolve({id:1, name: 'Rochdi Abdelatif'});
   } else {
    // le cas defavorable on recois um message
    reject(new Error('user is not found!'));
   }

});


//then donne le retour favorable et le catch donne le cas defavorable
p.then((user)=>console.log('resolve : ', user))
 .catch((err)=>console.log('reject : ', err.message));

 //Output
 root@superesa-System-Product-Name:/opt/lampp/htdocs/nodejs# node promise
resolve :  { id: 1, name: 'Rochdi Abdelatif' }
// status= false
root@superesa-System-Product-Name:/opt/lampp/htdocs/nodejs# node promise
reject :  user is not found!

//**********************************
const p = new Promise((resolve, reject) => {
   const status = false;
   if(status) {
    // le cas favorable
    resolve({id:1, name: 'Rochdi Abdelatif'});
   } else {
    // le cas defavorable on recois um message
    reject(new Error('user is not found!'));
   }
});

//then donne le retour favorable et le catch donne le cas defavorable
p.then((user)=>console.log('resolve : ', user))
 .catch((err)=>console.log('reject : ', err.message));
 console.log('before');
    getUsers(2).then((user) => {
                                console.log(user);
                               })
               .catch();
console.log('after');
 function getUsers(id){
    return new Promise((resolve, reject) => {

          setTimeout(() => {
                                console.log('get user from database.....');
                                resolve({
                                    id: id,
                                    gitHubusername: "rochdi Abdelatif"
                                })
                            }, 2000);
    });
}
function getRepos(idUser){

    return new Promise((resolve, reject) => {
            setTimeout(() => {
                                console.log('get a repos.....');
                                resolve(['repo1', 'repo2', 'repo3'])
                            }, 2000);

    });


}
//Output
root@superesa-System-Product-Name:/opt/lampp/htdocs/nodejs# node promise
before
after
reject :  user is not found!
get user from database.....
{ id: 2, gitHubusername: 'rochdi Abdelatif' }

//****************
// promise avancee
